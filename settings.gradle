String userDir = System.getProperty("user.dir");

gradle.ext.compileDeps = [];

ext.includeTransitive = { String[] projectPaths ->
	include projectPaths;

	for (String projectPath : projectPaths) {
		String projectSettings;

		projectSettings = projectPath.replaceAll(":", "/");
		projectSettings = projectSettings + "/dependency-settings.gradle";
		projectSettings = projectSettings.replaceFirst("^/", "");
		projectSettings = rootDir.toString() + "/" + projectSettings;

		File projectSettingsFile = new File(projectSettings);

		if (projectSettingsFile.exists() && projectSettingsFile.length() > 0) {
			apply from: projectSettingsFile;

			String projectCompileDeps = projectSettingsFile.text;
			
			projectCompileDeps =
				projectCompileDeps.replaceAll("includeTransitive", "");
			projectCompileDeps = projectCompileDeps.replaceAll(" ", "");
			projectCompileDeps = projectCompileDeps.replaceAll('"', "");
			projectCompileDeps = projectCompileDeps.replaceAll("\\s\$", "");
			
			String[] projectCompileDepsList = projectCompileDeps.split("\\n");

			gradle.compileDeps <<
				[projectPath: projectPath, compile: projectCompileDepsList];
		}
	}
}

FileTree fileTree = fileTree(userDir) {
	if ((pluginsIncludes != "") && (pluginsIncludes != "*")) {
		pluginsIncludes = pluginsIncludes.replaceAll(" ", "");
		pluginsIncludes = pluginsIncludes.replaceAll(",+", ",");

		def pluginsIncludesArray = pluginsIncludes.split(",");

		pluginsIncludesArray = pluginsIncludesArray.collect(
			{
				"**/" + it + "/build.gradle"
			}
		);
 
		pluginsIncludesArray.each(
			{
				include(it);
			}
		);
	}
	else {
		include("**/build.gradle");
	}
 
	if ((pluginsExcludes != "") && (pluginsExcludes != "*")) {
		pluginsExcludes = pluginsExcludes.replaceAll(" ", "");
		pluginsExcludes = pluginsExcludes.replaceAll(",+", ",");

		String[] pluginsExcludesArray = pluginsExcludes.split(",");

		pluginsExcludesArray = pluginsExcludesArray.collect(
			{
				"**/" + it + "/build.gradle"
			}
		);
 
		pluginsExcludesArray.each(
			{
				exclude(it);
			}
		);
	}
	else {
		exclude("**/build.gradle");
	}
}

fileTree.each(
	{
		URI rootURI = rootDir.toURI();

		URI pluginURI = it.toURI();

		pluginURI = rootURI.relativize(pluginURI);

		String pluginDir = pluginURI.toString();

		pluginDir = pluginDir.replaceFirst("/build.gradle", "");

		String newProject = ":" + pluginDir.replaceAll("[\\/]", ":");

		includeTransitive(newProject);
	}
);

include(":shared:portal-compat-shared");